# If the device is Battlemage, we need to set UBUNTU_VERSION to 24.10

# Usage: docker build --build-arg UBUNTU_VERSION=24.04 --build-arg PYTHON_VERSION=3.10 -t sglang:xpu_kernel -f  Dockerfile.xpu --no-cache .


# Set default Ubuntu version to 24.04
FROM intel/deep-learning-essentials:2025.2.2-0-devel-ubuntu24.04

ENV DEBIAN_FRONTEND=noninteractive

# Define build arguments
ARG PYTHON_VERSION=3.10

# Set environment variables

ARG SG_LANG_REPO=https://github.com/sgl-project/sglang.git
ARG SG_LANG_BRANCH=main

ARG SG_LANG_KERNEL_REPO=https://github.com/sgl-project/sgl-kernel-xpu.git
ARG SG_LANG_KERNEL_BRANCH=main

# Install Miniforge & PyTorch/Triton & build vllm/SGlang from source
RUN curl -fsSL -v -o miniforge.sh -O https://github.com/conda-forge/miniforge/releases/download/25.1.1-0/Miniforge3-Linux-x86_64.sh && \
    bash miniforge.sh -b -p ./miniforge3 && \
    rm miniforge.sh && \
    . ./miniforge3/bin/activate && \
    conda create -y -n py${PYTHON_VERSION} python=${PYTHON_VERSION} && conda activate py${PYTHON_VERSION} && \
    conda install pip && \
    echo ". /miniforge3/bin/activate; conda activate py${PYTHON_VERSION}; . /opt/intel/oneapi/setvars.sh; cd /root/" >> /root/.bashrc;

# Install Miniforge & PyTorch/Triton & build vllm/SGlang from source
RUN apt-get update && \
    apt install -y intel-ocloc

RUN --mount=type=secret,id=github_token \
    cd /root && \
    . /miniforge3/bin/activate && \
    conda activate py${PYTHON_VERSION} && \
    # . /opt/intel/oneapi/setvars.sh --force && \
    # Install Torch
    pip install torch==2.9.0 torchvision torchaudio pytorch-triton-xpu==3.5.0 --index-url https://download.pytorch.org/whl/xpu

# Install SGlang from source
RUN --mount=type=secret,id=github_token \
    # Install vllm from source
    cd /root && \
    . /miniforge3/bin/activate && \
    conda activate py${PYTHON_VERSION} && \
    echo "cloning ${SG_LANG_BRANCH} from ${SG_LANG_REPO}" && \
    git clone --branch ${SG_LANG_BRANCH} --single-branch ${SG_LANG_REPO} && \
    cd sglang && \
    # Clone sgl-kernel and build sglang-kernel...
    echo "cloning ${SG_LANG_KERNEL_REPO} from ${SG_LANG_KERNEL_BRANCH}" && \
    git clone --branch ${SG_LANG_KERNEL_BRANCH} --single-branch ${SG_LANG_KERNEL_REPO} && \
    cd sgl-kernel-xpu && \
    pip install -v . &&\
    # Install required packages for sglang workloads
    pip install msgspec blake3 py-cpuinfo compressed_tensors gguf partial_json_parser einops matplotlib pandas --root-user-action=ignore && \
    conda install libsqlite=3.48.0 -y && \
    echo ". /miniforge3/bin/activate; conda activate py${PYTHON_VERSION}; cd /root/" >> /root/.bashrc;

# Set the default shell to bash
SHELL ["bash", "-c"]
CMD ["bash", "-c", "source /root/.bashrc && exec bash"]
